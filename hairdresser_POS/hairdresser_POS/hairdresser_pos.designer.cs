#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hairdresser_POS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hairdress_pos")]
	public partial class hairdresser_posDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertappointment(appointment instance);
    partial void Updateappointment(appointment instance);
    partial void Deleteappointment(appointment instance);
    partial void Insertcut(cut instance);
    partial void Updatecut(cut instance);
    partial void Deletecut(cut instance);
    partial void Inserthairdresser(hairdresser instance);
    partial void Updatehairdresser(hairdresser instance);
    partial void Deletehairdresser(hairdresser instance);
    partial void Inserthairproduct(hairproduct instance);
    partial void Updatehairproduct(hairproduct instance);
    partial void Deletehairproduct(hairproduct instance);
    partial void Inserthairservice(hairservice instance);
    partial void Updatehairservice(hairservice instance);
    partial void Deletehairservice(hairservice instance);
    partial void Insertinventory(inventory instance);
    partial void Updateinventory(inventory instance);
    partial void Deleteinventory(inventory instance);
    partial void InsertinventoryItem(inventoryItem instance);
    partial void UpdateinventoryItem(inventoryItem instance);
    partial void DeleteinventoryItem(inventoryItem instance);
    partial void Insertreciept(reciept instance);
    partial void Updatereciept(reciept instance);
    partial void Deletereciept(reciept instance);
    partial void Inserttransaction(transaction instance);
    partial void Updatetransaction(transaction instance);
    partial void Deletetransaction(transaction instance);
    #endregion
		
		public hairdresser_posDataContext() : 
				base(global::hairdresser_POS.Properties.Settings.Default.hairdress_posConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public hairdresser_posDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hairdresser_posDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hairdresser_posDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hairdresser_posDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<appointment> appointments
		{
			get
			{
				return this.GetTable<appointment>();
			}
		}
		
		public System.Data.Linq.Table<cut> cuts
		{
			get
			{
				return this.GetTable<cut>();
			}
		}
		
		public System.Data.Linq.Table<hairdresser> hairdressers
		{
			get
			{
				return this.GetTable<hairdresser>();
			}
		}
		
		public System.Data.Linq.Table<hairproduct> hairproducts
		{
			get
			{
				return this.GetTable<hairproduct>();
			}
		}
		
		public System.Data.Linq.Table<hairservice> hairservices
		{
			get
			{
				return this.GetTable<hairservice>();
			}
		}
		
		public System.Data.Linq.Table<inventory> inventories
		{
			get
			{
				return this.GetTable<inventory>();
			}
		}
		
		public System.Data.Linq.Table<inventoryItem> inventoryItems
		{
			get
			{
				return this.GetTable<inventoryItem>();
			}
		}
		
		public System.Data.Linq.Table<reciept> reciepts
		{
			get
			{
				return this.GetTable<reciept>();
			}
		}
		
		public System.Data.Linq.Table<transaction> transactions
		{
			get
			{
				return this.GetTable<transaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appointments")]
	public partial class appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _appointmentID;
		
		private System.DateTime _appointmentTime;
		
		private string _appointmentName;
		
		private string _appointmentNumber;
		
		private System.Nullable<int> _appointmentDresser;
		
		private EntityRef<hairdresser> _hairdresser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnappointmentIDChanging(int value);
    partial void OnappointmentIDChanged();
    partial void OnappointmentTimeChanging(System.DateTime value);
    partial void OnappointmentTimeChanged();
    partial void OnappointmentNameChanging(string value);
    partial void OnappointmentNameChanged();
    partial void OnappointmentNumberChanging(string value);
    partial void OnappointmentNumberChanged();
    partial void OnappointmentDresserChanging(System.Nullable<int> value);
    partial void OnappointmentDresserChanged();
    #endregion
		
		public appointment()
		{
			this._hairdresser = default(EntityRef<hairdresser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int appointmentID
		{
			get
			{
				return this._appointmentID;
			}
			set
			{
				if ((this._appointmentID != value))
				{
					this.OnappointmentIDChanging(value);
					this.SendPropertyChanging();
					this._appointmentID = value;
					this.SendPropertyChanged("appointmentID");
					this.OnappointmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmentTime", DbType="DateTime NOT NULL")]
		public System.DateTime appointmentTime
		{
			get
			{
				return this._appointmentTime;
			}
			set
			{
				if ((this._appointmentTime != value))
				{
					this.OnappointmentTimeChanging(value);
					this.SendPropertyChanging();
					this._appointmentTime = value;
					this.SendPropertyChanged("appointmentTime");
					this.OnappointmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmentName", DbType="VarChar(128)")]
		public string appointmentName
		{
			get
			{
				return this._appointmentName;
			}
			set
			{
				if ((this._appointmentName != value))
				{
					this.OnappointmentNameChanging(value);
					this.SendPropertyChanging();
					this._appointmentName = value;
					this.SendPropertyChanged("appointmentName");
					this.OnappointmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmentNumber", DbType="VarChar(10)")]
		public string appointmentNumber
		{
			get
			{
				return this._appointmentNumber;
			}
			set
			{
				if ((this._appointmentNumber != value))
				{
					this.OnappointmentNumberChanging(value);
					this.SendPropertyChanging();
					this._appointmentNumber = value;
					this.SendPropertyChanged("appointmentNumber");
					this.OnappointmentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmentDresser", DbType="Int")]
		public System.Nullable<int> appointmentDresser
		{
			get
			{
				return this._appointmentDresser;
			}
			set
			{
				if ((this._appointmentDresser != value))
				{
					if (this._hairdresser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnappointmentDresserChanging(value);
					this.SendPropertyChanging();
					this._appointmentDresser = value;
					this.SendPropertyChanged("appointmentDresser");
					this.OnappointmentDresserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairdresser_appointment", Storage="_hairdresser", ThisKey="appointmentDresser", OtherKey="hairdressersID", IsForeignKey=true)]
		public hairdresser hairdresser
		{
			get
			{
				return this._hairdresser.Entity;
			}
			set
			{
				hairdresser previousValue = this._hairdresser.Entity;
				if (((previousValue != value) 
							|| (this._hairdresser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hairdresser.Entity = null;
						previousValue.appointments.Remove(this);
					}
					this._hairdresser.Entity = value;
					if ((value != null))
					{
						value.appointments.Add(this);
						this._appointmentDresser = value.hairdressersID;
					}
					else
					{
						this._appointmentDresser = default(Nullable<int>);
					}
					this.SendPropertyChanged("hairdresser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cuts")]
	public partial class cut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cutID;
		
		private string _cutIncludes;
		
		private string _hairlength;
		
		private System.Nullable<decimal> _cost;
		
		private EntityRef<hairservice> _hairservice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncutIDChanging(int value);
    partial void OncutIDChanged();
    partial void OncutIncludesChanging(string value);
    partial void OncutIncludesChanged();
    partial void OnhairlengthChanging(string value);
    partial void OnhairlengthChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    #endregion
		
		public cut()
		{
			this._hairservice = default(EntityRef<hairservice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cutID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cutID
		{
			get
			{
				return this._cutID;
			}
			set
			{
				if ((this._cutID != value))
				{
					if (this._hairservice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncutIDChanging(value);
					this.SendPropertyChanging();
					this._cutID = value;
					this.SendPropertyChanged("cutID");
					this.OncutIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cutIncludes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string cutIncludes
		{
			get
			{
				return this._cutIncludes;
			}
			set
			{
				if ((this._cutIncludes != value))
				{
					this.OncutIncludesChanging(value);
					this.SendPropertyChanging();
					this._cutIncludes = value;
					this.SendPropertyChanged("cutIncludes");
					this.OncutIncludesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hairlength", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string hairlength
		{
			get
			{
				return this._hairlength;
			}
			set
			{
				if ((this._hairlength != value))
				{
					this.OnhairlengthChanging(value);
					this.SendPropertyChanging();
					this._hairlength = value;
					this.SendPropertyChanged("hairlength");
					this.OnhairlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairservice_cut", Storage="_hairservice", ThisKey="cutID", OtherKey="serviceID", IsForeignKey=true)]
		public hairservice hairservice
		{
			get
			{
				return this._hairservice.Entity;
			}
			set
			{
				hairservice previousValue = this._hairservice.Entity;
				if (((previousValue != value) 
							|| (this._hairservice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hairservice.Entity = null;
						previousValue.cut = null;
					}
					this._hairservice.Entity = value;
					if ((value != null))
					{
						value.cut = this;
						this._cutID = value.serviceID;
					}
					else
					{
						this._cutID = default(int);
					}
					this.SendPropertyChanged("hairservice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hairdressers")]
	public partial class hairdresser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hairdressersID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Number;
		
		private EntitySet<appointment> _appointments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhairdressersIDChanging(int value);
    partial void OnhairdressersIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    #endregion
		
		public hairdresser()
		{
			this._appointments = new EntitySet<appointment>(new Action<appointment>(this.attach_appointments), new Action<appointment>(this.detach_appointments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hairdressersID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int hairdressersID
		{
			get
			{
				return this._hairdressersID;
			}
			set
			{
				if ((this._hairdressersID != value))
				{
					this.OnhairdressersIDChanging(value);
					this.SendPropertyChanging();
					this._hairdressersID = value;
					this.SendPropertyChanged("hairdressersID");
					this.OnhairdressersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairdresser_appointment", Storage="_appointments", ThisKey="hairdressersID", OtherKey="appointmentDresser")]
		public EntitySet<appointment> appointments
		{
			get
			{
				return this._appointments;
			}
			set
			{
				this._appointments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.hairdresser = this;
		}
		
		private void detach_appointments(appointment entity)
		{
			this.SendPropertyChanging();
			entity.hairdresser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hairproducts")]
	public partial class hairproduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productID;
		
		private long _Number;
		
		private string _productType;
		
		private string _productInfo;
		
		private System.Nullable<int> _instock;
		
		private System.Nullable<decimal> _cost;
		
		private EntitySet<inventoryItem> _inventoryItems;
		
		private EntityRef<hairservice> _hairservice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(int value);
    partial void OnproductIDChanged();
    partial void OnNumberChanging(long value);
    partial void OnNumberChanged();
    partial void OnproductTypeChanging(string value);
    partial void OnproductTypeChanged();
    partial void OnproductInfoChanging(string value);
    partial void OnproductInfoChanged();
    partial void OninstockChanging(System.Nullable<int> value);
    partial void OninstockChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    #endregion
		
		public hairproduct()
		{
			this._inventoryItems = new EntitySet<inventoryItem>(new Action<inventoryItem>(this.attach_inventoryItems), new Action<inventoryItem>(this.detach_inventoryItems));
			this._hairservice = default(EntityRef<hairservice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._hairservice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="BigInt NOT NULL")]
		public long Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productType", DbType="VarChar(64)")]
		public string productType
		{
			get
			{
				return this._productType;
			}
			set
			{
				if ((this._productType != value))
				{
					this.OnproductTypeChanging(value);
					this.SendPropertyChanging();
					this._productType = value;
					this.SendPropertyChanged("productType");
					this.OnproductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productInfo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string productInfo
		{
			get
			{
				return this._productInfo;
			}
			set
			{
				if ((this._productInfo != value))
				{
					this.OnproductInfoChanging(value);
					this.SendPropertyChanging();
					this._productInfo = value;
					this.SendPropertyChanged("productInfo");
					this.OnproductInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_instock", DbType="Int")]
		public System.Nullable<int> instock
		{
			get
			{
				return this._instock;
			}
			set
			{
				if ((this._instock != value))
				{
					this.OninstockChanging(value);
					this.SendPropertyChanging();
					this._instock = value;
					this.SendPropertyChanged("instock");
					this.OninstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairproduct_inventoryItem", Storage="_inventoryItems", ThisKey="productID", OtherKey="productID")]
		public EntitySet<inventoryItem> inventoryItems
		{
			get
			{
				return this._inventoryItems;
			}
			set
			{
				this._inventoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairservice_hairproduct", Storage="_hairservice", ThisKey="productID", OtherKey="serviceID", IsForeignKey=true)]
		public hairservice hairservice
		{
			get
			{
				return this._hairservice.Entity;
			}
			set
			{
				hairservice previousValue = this._hairservice.Entity;
				if (((previousValue != value) 
							|| (this._hairservice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hairservice.Entity = null;
						previousValue.hairproduct = null;
					}
					this._hairservice.Entity = value;
					if ((value != null))
					{
						value.hairproduct = this;
						this._productID = value.serviceID;
					}
					else
					{
						this._productID = default(int);
					}
					this.SendPropertyChanged("hairservice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inventoryItems(inventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.hairproduct = this;
		}
		
		private void detach_inventoryItems(inventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.hairproduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hairservices")]
	public partial class hairservice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _serviceID;
		
		private string _serviceName;
		
		private EntityRef<cut> _cut;
		
		private EntityRef<hairproduct> _hairproduct;
		
		private EntitySet<reciept> _reciepts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnserviceIDChanging(int value);
    partial void OnserviceIDChanged();
    partial void OnserviceNameChanging(string value);
    partial void OnserviceNameChanged();
    #endregion
		
		public hairservice()
		{
			this._cut = default(EntityRef<cut>);
			this._hairproduct = default(EntityRef<hairproduct>);
			this._reciepts = new EntitySet<reciept>(new Action<reciept>(this.attach_reciepts), new Action<reciept>(this.detach_reciepts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int serviceID
		{
			get
			{
				return this._serviceID;
			}
			set
			{
				if ((this._serviceID != value))
				{
					this.OnserviceIDChanging(value);
					this.SendPropertyChanging();
					this._serviceID = value;
					this.SendPropertyChanged("serviceID");
					this.OnserviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string serviceName
		{
			get
			{
				return this._serviceName;
			}
			set
			{
				if ((this._serviceName != value))
				{
					this.OnserviceNameChanging(value);
					this.SendPropertyChanging();
					this._serviceName = value;
					this.SendPropertyChanged("serviceName");
					this.OnserviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairservice_cut", Storage="_cut", ThisKey="serviceID", OtherKey="cutID", IsUnique=true, IsForeignKey=false)]
		public cut cut
		{
			get
			{
				return this._cut.Entity;
			}
			set
			{
				cut previousValue = this._cut.Entity;
				if (((previousValue != value) 
							|| (this._cut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cut.Entity = null;
						previousValue.hairservice = null;
					}
					this._cut.Entity = value;
					if ((value != null))
					{
						value.hairservice = this;
					}
					this.SendPropertyChanged("cut");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairservice_hairproduct", Storage="_hairproduct", ThisKey="serviceID", OtherKey="productID", IsUnique=true, IsForeignKey=false)]
		public hairproduct hairproduct
		{
			get
			{
				return this._hairproduct.Entity;
			}
			set
			{
				hairproduct previousValue = this._hairproduct.Entity;
				if (((previousValue != value) 
							|| (this._hairproduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hairproduct.Entity = null;
						previousValue.hairservice = null;
					}
					this._hairproduct.Entity = value;
					if ((value != null))
					{
						value.hairservice = this;
					}
					this.SendPropertyChanged("hairproduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairservice_reciept", Storage="_reciepts", ThisKey="serviceID", OtherKey="hairserviceID")]
		public EntitySet<reciept> reciepts
		{
			get
			{
				return this._reciepts;
			}
			set
			{
				this._reciepts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_reciepts(reciept entity)
		{
			this.SendPropertyChanging();
			entity.hairservice = this;
		}
		
		private void detach_reciepts(reciept entity)
		{
			this.SendPropertyChanging();
			entity.hairservice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventory")]
	public partial class inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _inventoryID;
		
		private string _invoiceID;
		
		private System.Nullable<double> _value;
		
		private System.Nullable<int> _itemCount;
		
		private System.Nullable<System.DateTime> _invoiceDate;
		
		private System.Nullable<System.DateTime> _recieveDate;
		
		private EntitySet<inventoryItem> _inventoryItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OninventoryIDChanging(string value);
    partial void OninventoryIDChanged();
    partial void OninvoiceIDChanging(string value);
    partial void OninvoiceIDChanged();
    partial void OnvalueChanging(System.Nullable<double> value);
    partial void OnvalueChanged();
    partial void OnitemCountChanging(System.Nullable<int> value);
    partial void OnitemCountChanged();
    partial void OninvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OninvoiceDateChanged();
    partial void OnrecieveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnrecieveDateChanged();
    #endregion
		
		public inventory()
		{
			this._inventoryItems = new EntitySet<inventoryItem>(new Action<inventoryItem>(this.attach_inventoryItems), new Action<inventoryItem>(this.detach_inventoryItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventoryID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string inventoryID
		{
			get
			{
				return this._inventoryID;
			}
			set
			{
				if ((this._inventoryID != value))
				{
					this.OninventoryIDChanging(value);
					this.SendPropertyChanging();
					this._inventoryID = value;
					this.SendPropertyChanged("inventoryID");
					this.OninventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceID", DbType="VarChar(48)")]
		public string invoiceID
		{
			get
			{
				return this._invoiceID;
			}
			set
			{
				if ((this._invoiceID != value))
				{
					this.OninvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._invoiceID = value;
					this.SendPropertyChanged("invoiceID");
					this.OninvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float")]
		public System.Nullable<double> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemCount", DbType="Int")]
		public System.Nullable<int> itemCount
		{
			get
			{
				return this._itemCount;
			}
			set
			{
				if ((this._itemCount != value))
				{
					this.OnitemCountChanging(value);
					this.SendPropertyChanging();
					this._itemCount = value;
					this.SendPropertyChanged("itemCount");
					this.OnitemCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> invoiceDate
		{
			get
			{
				return this._invoiceDate;
			}
			set
			{
				if ((this._invoiceDate != value))
				{
					this.OninvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._invoiceDate = value;
					this.SendPropertyChanged("invoiceDate");
					this.OninvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recieveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> recieveDate
		{
			get
			{
				return this._recieveDate;
			}
			set
			{
				if ((this._recieveDate != value))
				{
					this.OnrecieveDateChanging(value);
					this.SendPropertyChanging();
					this._recieveDate = value;
					this.SendPropertyChanged("recieveDate");
					this.OnrecieveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventory_inventoryItem", Storage="_inventoryItems", ThisKey="inventoryID", OtherKey="inventoryID")]
		public EntitySet<inventoryItem> inventoryItems
		{
			get
			{
				return this._inventoryItems;
			}
			set
			{
				this._inventoryItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inventoryItems(inventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.inventory = this;
		}
		
		private void detach_inventoryItems(inventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.inventory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventoryItems")]
	public partial class inventoryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _inventoryID;
		
		private int _productID;
		
		private System.Nullable<int> _quantity;
		
		private EntityRef<inventory> _inventory;
		
		private EntityRef<hairproduct> _hairproduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OninventoryIDChanging(string value);
    partial void OninventoryIDChanged();
    partial void OnproductIDChanging(int value);
    partial void OnproductIDChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
		
		public inventoryItem()
		{
			this._inventory = default(EntityRef<inventory>);
			this._hairproduct = default(EntityRef<hairproduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventoryID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string inventoryID
		{
			get
			{
				return this._inventoryID;
			}
			set
			{
				if ((this._inventoryID != value))
				{
					if (this._inventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninventoryIDChanging(value);
					this.SendPropertyChanging();
					this._inventoryID = value;
					this.SendPropertyChanged("inventoryID");
					this.OninventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._hairproduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventory_inventoryItem", Storage="_inventory", ThisKey="inventoryID", OtherKey="inventoryID", IsForeignKey=true)]
		public inventory inventory
		{
			get
			{
				return this._inventory.Entity;
			}
			set
			{
				inventory previousValue = this._inventory.Entity;
				if (((previousValue != value) 
							|| (this._inventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._inventory.Entity = null;
						previousValue.inventoryItems.Remove(this);
					}
					this._inventory.Entity = value;
					if ((value != null))
					{
						value.inventoryItems.Add(this);
						this._inventoryID = value.inventoryID;
					}
					else
					{
						this._inventoryID = default(string);
					}
					this.SendPropertyChanged("inventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairproduct_inventoryItem", Storage="_hairproduct", ThisKey="productID", OtherKey="productID", IsForeignKey=true)]
		public hairproduct hairproduct
		{
			get
			{
				return this._hairproduct.Entity;
			}
			set
			{
				hairproduct previousValue = this._hairproduct.Entity;
				if (((previousValue != value) 
							|| (this._hairproduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hairproduct.Entity = null;
						previousValue.inventoryItems.Remove(this);
					}
					this._hairproduct.Entity = value;
					if ((value != null))
					{
						value.inventoryItems.Add(this);
						this._productID = value.productID;
					}
					else
					{
						this._productID = default(int);
					}
					this.SendPropertyChanged("hairproduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reciept")]
	public partial class reciept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transactionID;
		
		private int _hairserviceID;
		
		private System.Nullable<int> _quantity;
		
		private EntityRef<hairservice> _hairservice;
		
		private EntityRef<transaction> _transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransactionIDChanging(string value);
    partial void OntransactionIDChanged();
    partial void OnhairserviceIDChanging(int value);
    partial void OnhairserviceIDChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
		
		public reciept()
		{
			this._hairservice = default(EntityRef<hairservice>);
			this._transaction = default(EntityRef<transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string transactionID
		{
			get
			{
				return this._transactionID;
			}
			set
			{
				if ((this._transactionID != value))
				{
					if (this._transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransactionIDChanging(value);
					this.SendPropertyChanging();
					this._transactionID = value;
					this.SendPropertyChanged("transactionID");
					this.OntransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hairserviceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hairserviceID
		{
			get
			{
				return this._hairserviceID;
			}
			set
			{
				if ((this._hairserviceID != value))
				{
					if (this._hairservice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhairserviceIDChanging(value);
					this.SendPropertyChanging();
					this._hairserviceID = value;
					this.SendPropertyChanged("hairserviceID");
					this.OnhairserviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hairservice_reciept", Storage="_hairservice", ThisKey="hairserviceID", OtherKey="serviceID", IsForeignKey=true)]
		public hairservice hairservice
		{
			get
			{
				return this._hairservice.Entity;
			}
			set
			{
				hairservice previousValue = this._hairservice.Entity;
				if (((previousValue != value) 
							|| (this._hairservice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hairservice.Entity = null;
						previousValue.reciepts.Remove(this);
					}
					this._hairservice.Entity = value;
					if ((value != null))
					{
						value.reciepts.Add(this);
						this._hairserviceID = value.serviceID;
					}
					else
					{
						this._hairserviceID = default(int);
					}
					this.SendPropertyChanged("hairservice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transaction_reciept", Storage="_transaction", ThisKey="transactionID", OtherKey="transactionID", IsForeignKey=true)]
		public transaction transaction
		{
			get
			{
				return this._transaction.Entity;
			}
			set
			{
				transaction previousValue = this._transaction.Entity;
				if (((previousValue != value) 
							|| (this._transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._transaction.Entity = null;
						previousValue.reciepts.Remove(this);
					}
					this._transaction.Entity = value;
					if ((value != null))
					{
						value.reciepts.Add(this);
						this._transactionID = value.transactionID;
					}
					else
					{
						this._transactionID = default(string);
					}
					this.SendPropertyChanged("transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transactions")]
	public partial class transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transactionID;
		
		private System.Nullable<double> _value;
		
		private System.Nullable<int> _items;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntitySet<reciept> _reciepts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransactionIDChanging(string value);
    partial void OntransactionIDChanged();
    partial void OnvalueChanging(System.Nullable<double> value);
    partial void OnvalueChanged();
    partial void OnitemsChanging(System.Nullable<int> value);
    partial void OnitemsChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public transaction()
		{
			this._reciepts = new EntitySet<reciept>(new Action<reciept>(this.attach_reciepts), new Action<reciept>(this.detach_reciepts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string transactionID
		{
			get
			{
				return this._transactionID;
			}
			set
			{
				if ((this._transactionID != value))
				{
					this.OntransactionIDChanging(value);
					this.SendPropertyChanging();
					this._transactionID = value;
					this.SendPropertyChanged("transactionID");
					this.OntransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float")]
		public System.Nullable<double> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_items", DbType="Int")]
		public System.Nullable<int> items
		{
			get
			{
				return this._items;
			}
			set
			{
				if ((this._items != value))
				{
					this.OnitemsChanging(value);
					this.SendPropertyChanging();
					this._items = value;
					this.SendPropertyChanged("items");
					this.OnitemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transaction_reciept", Storage="_reciepts", ThisKey="transactionID", OtherKey="transactionID")]
		public EntitySet<reciept> reciepts
		{
			get
			{
				return this._reciepts;
			}
			set
			{
				this._reciepts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_reciepts(reciept entity)
		{
			this.SendPropertyChanging();
			entity.transaction = this;
		}
		
		private void detach_reciepts(reciept entity)
		{
			this.SendPropertyChanging();
			entity.transaction = null;
		}
	}
}
#pragma warning restore 1591
